generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Modelos existentes mantidos
model Videos {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  content   String?
  url       String
  thumb     String
  createdAt DateTime @default(now())

  @@map("videos")
}

model Shorts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  url       String
  thumb     String
  createdAt DateTime @default(now())

  @@map("shorts")
}

model Setup {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  price      Float
  productUrl String
  imageUrl   String
  slug       String
  nameFull   String
  createdAt  DateTime @default(now())

  @@map("setup")
}

model Hostinger {
  id                     String @id @default(auto()) @map("_id") @db.ObjectId
  title                  String
  priceOriginalTotal     Float
  discountOne            String
  discountOneValue       Float
  referralDiscount       String
  referralDiscountValue  Float
  price                  Float
  discountDescription    String
  priceAndDiscount       String
  link                   String
  description            Json
  discountSubDescription Json

  @@map("hostinger")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String
  avatarUrl    String
  posts        Post[]
  createdAt    DateTime      @default(now())
  socialMedias SocialMedia[]

  @@map("user")
}

model Post {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String
  content       String
  imageUrl      String?
  newsSource    String
  newsSourceUrl String
  user          User?   @relation(fields: [userId], references: [id])
  userId        String? @db.ObjectId

  @@map("posts")
}

model SocialMedia {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  slug   String
  url    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@map("socials_media")
}

// MODELOS DE CURR√çCULO - REESTRUTURADOS

model PersonalInfo {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  title         String
  location      String
  slug          String
  summary       String
  contact       ContactInfo     @relation(fields: [contactId], references: [id])
  contactId     String          @db.ObjectId
  education     Education[]
  certification Certification[]
  experience    Experience[]
  skills        Skills?         @relation(fields: [skillsId], references: [id])
  skillsId      String?         @db.ObjectId
  languages     Languages[]

  @@map("personal_info")
}

model ContactInfo {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  phone        String
  email        String
  linkedin     String
  github       String
  portfolio    String
  youtube      String
  personalInfo PersonalInfo[]

  @@map("contact_info")
}

model Education {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  degree         String
  institution    String
  period         String
  personalInfo   PersonalInfo @relation(fields: [personalInfoId], references: [id])
  personalInfoId String       @db.ObjectId

  @@map("education")
}

model Certification {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  personalInfo   PersonalInfo @relation(fields: [personalInfoId], references: [id])
  personalInfoId String       @db.ObjectId

  @@map("certifications")
}

model Experience {
  id             String                  @id @default(auto()) @map("_id") @db.ObjectId
  company        String
  position       String
  technologies   String
  period         String
  descriptions   ExperienceDescription[]
  personalInfo   PersonalInfo            @relation(fields: [personalInfoId], references: [id])
  personalInfoId String                  @db.ObjectId

  @@map("experience")
}

model ExperienceDescription {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  description  String
  experience   Experience @relation(fields: [experienceId], references: [id])
  experienceId String     @db.ObjectId

  @@map("experience_description")
}

model Skills {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  personalInfo     PersonalInfo[]
  skillBackend     SkillBackend[]
  skillFrontend    SkillFrontend[]
  skillDatabase    SkillDatabase[]
  skillTool        SkillTool[]
  skillMethodology SkillMethodology[]

  @@map("skills")
}

model SkillBackend {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  skills   Skills @relation(fields: [skillsId], references: [id])
  skillsId String @db.ObjectId

  @@map("skill_backend")
}

model SkillFrontend {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  skills   Skills @relation(fields: [skillsId], references: [id])
  skillsId String @db.ObjectId

  @@map("skill_frontend")
}

model SkillDatabase {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  skills   Skills @relation(fields: [skillsId], references: [id])
  skillsId String @db.ObjectId

  @@map("skill_database")
}

model SkillTool {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  skills   Skills @relation(fields: [skillsId], references: [id])
  skillsId String @db.ObjectId

  @@map("skill_tool")
}

model SkillMethodology {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  skills   Skills @relation(fields: [skillsId], references: [id])
  skillsId String @db.ObjectId

  @@map("skill_methodology")
}

model Languages {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  language       String
  level          String
  personalInfo   PersonalInfo @relation(fields: [personalInfoId], references: [id])
  personalInfoId String       @db.ObjectId

  @@map("languages")
}

model Techs {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String
  description String

  @@map("techs")
}
